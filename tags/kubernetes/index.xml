<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on vknabel</title><link>https://vknabel.com/tags/kubernetes/</link><description>Recent content in Kubernetes on vknabel</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Valentin Knabel</copyright><lastBuildDate>Mon, 12 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://vknabel.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>My Personal View on Acorn</title><link>https://vknabel.com/posts/my-personal-view-on-acorn/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://vknabel.com/posts/my-personal-view-on-acorn/</guid><description>&lt;p&gt;&lt;a href="https://acorn.io"&gt;Acorn&lt;/a&gt; is an application deployment framework for k8s, that tries to simplify instead of introducing another layer of indirection. I won&amp;rsquo;t cover all details and problems it tries to solve here, instead I&amp;rsquo;d like to share some experiences and thoughts.&lt;/p&gt;
&lt;h2 id="my-experience-with-acorn-and-kubernetes"&gt;My experience with Acorn and Kubernetes&lt;/h2&gt;
&lt;p&gt;Before we dive right in, I&amp;rsquo;d like to let you know about my level of experience with Kubernetes and Acorn.&lt;/p&gt;
&lt;p&gt;I started having a look on Acorn in August 2022 and played around with it. I did not have production experience with Kubernetes, but I started learning and playing around with it a few months before.&lt;/p&gt;
&lt;p&gt;To get a deeper understanding on k8s, I soon started to migrate my personal services hosted on multiple docker-compose-files. Later I had a look on Acorn and started to play around with it. I also translated my docker-compose-files and k8s manifests to Acorn and liked the result.&lt;/p&gt;
&lt;p&gt;Later I migrated my personal production services to k8s and Acorn. As &lt;a href="http://github.com/vknabel/puffery"&gt;Puffery&lt;/a&gt; only has a few users, there wasn&amp;rsquo;t much risk involved.&lt;/p&gt;
&lt;p&gt;On October 2022, I held a talk about &lt;a href="https://acorn.io"&gt;Acorn&lt;/a&gt; at the &lt;a href="https://community.cncf.io/events/details/cncf-kcd-munich-presents-kubernetes-community-days-munich-2022-1/"&gt;Kubernetes Community Days Munich 2022&lt;/a&gt;. And recently I wrote the &lt;a href="https://www.x-cellent.com/posts/getting-started-with-acorn-for-kubernetes"&gt;corresponding blog post&lt;/a&gt; for my employer&amp;rsquo;s blog to share the contents of the talk.&lt;/p&gt;
&lt;h2 id="secrets"&gt;Secrets&lt;/h2&gt;
&lt;p&gt;Acorn forces you to declare secrets in the &lt;code&gt;Acornfile&lt;/code&gt;, but it forbids you to provide them there. Instead it will automatically generate the secrets on the initial deployment. You don&amp;rsquo;t have to worry about secrets anymore.&lt;/p&gt;
&lt;p&gt;The weird part is, when you have an existing secret. You don&amp;rsquo;t override or change the generated secret. Instead you create a new secret at the command line and link both secrets together.&lt;/p&gt;
&lt;p&gt;But if you are used to it, it&amp;rsquo;s actually a nice way to solve this issue.&lt;/p&gt;
&lt;h2 id="referencing-resources"&gt;Referencing Resources&lt;/h2&gt;
&lt;p&gt;In Acorn you need to reference some resources like a specific secret or volume. Here you use an URL with the appropriate scheme. For example, to reference a secret, you use the &lt;code&gt;secret://&lt;/code&gt; scheme.&lt;/p&gt;
&lt;p&gt;In regards to volumes, this is awesome, as you can even mount a specific path of the volume into a directory. But when using secrets, this is sometimes a bit annoying, as you need to reference the whole secret and then extract the value you need, like &lt;code&gt;secret://db-password/token&lt;/code&gt;. The benefit: you can create a secret to mount multiple files into a container using an opaque secret.&lt;/p&gt;
&lt;p&gt;I understand the reasoning behind using resource URLs, as these resources technically need to be created and are not part of the Acorn Image. But in the beginning this was a bit confusing. Maybe this is just a documentation issue.&lt;/p&gt;
&lt;h2 id="development"&gt;Development&lt;/h2&gt;
&lt;p&gt;For development we always need a vast range of tools. Especially when working with multiple programming languages. I tend to avoid installing those on my local machine and instead use containers. In easier cases I use &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers"&gt;Remote Containers&lt;/a&gt; for VS Code. For more complex use cases that include databases, I rely on docker-compose. But if the application needs to run in a Kubernetes cluster, it would be twice the work to maintain the &lt;code&gt;docker-compose.yaml&lt;/code&gt; and the k8s manifests. With Acorn, I can use the same manifests for development and production. Of course I need to sprinkle some &lt;code&gt;if&lt;/code&gt; statements in the &lt;code&gt;Acornfile&lt;/code&gt; to make it work for both environments, but it feels much more natural than maintaining two different sets of manifests.&lt;/p&gt;
&lt;p&gt;And to be honest, I think an &lt;code&gt;Acornfile&lt;/code&gt; is far easier to read, than a &lt;code&gt;docker-compose.yaml&lt;/code&gt; or many k8s manifests.&lt;/p&gt;
&lt;h2 id="production-use"&gt;Production Use&lt;/h2&gt;
&lt;p&gt;I have been using Acorn in production for a few months now and I have not encountered any problems so far.
Instead I really like gathering all logs of one application with a single command out of the box: &lt;code&gt;acorn logs [app]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I also like the fact, that Acorn knows the concept of an app. That way it can provide a great overview about whole applications across multiple resource types.&lt;/p&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I really like Acorn and I think it&amp;rsquo;s a great tool to simplify the deployment of applications to Kubernetes. It&amp;rsquo;s not perfect, but it&amp;rsquo;s a great start. At the moment I&amp;rsquo;m not sure if I would use it for a production application with a lot of users, but I would definitely use it for my personal projects.&lt;/p&gt;</description></item></channel></rss>